server.port=8099
server.servlet.context-path=/admin

#spring.resources.static-locations=classpath:/static/,classpath:/resources/static/

#后台数据库
admin.url=jdbc:mysql://10.168.2.201:3306/dev_admin?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false
admin.username=dev_fintech_api
admin.password=dev_fintech_api

#后端数据库
backend.url=jdbc:mysql://127.0.0.1:3306/dev_fintech_api?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false
backend.username=root
backend.password=123456

# MySQL  数据配置
mysql.driver=com.mysql.jdbc.Driver
# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
mysql.initialSize=1
mysql.poolMaximumIdleConnections=3
mysql.poolMaximumActiveConnections=20
# 配置获取连接等待超时的时间
mysql.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
mysql.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
mysql.minEvictableIdleTimeMillis=30000
mysql.validationQuery='SELECT 1'
mysql.testWhileIdle=true
mysql.testOnBorrow=false
mysql.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
mysql.poolPreparedStatements=true
mysql.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
mysql.filters=stat,wall,slf4j
#管理页面帐号和密码
druid.admin=admin
druid.password=admin
